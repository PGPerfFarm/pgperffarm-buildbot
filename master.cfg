# -*- python -*-
# ex: set filetype=python:

"""
This is the Buildbot configuration file.
"""

import sys
from buildbot.plugins import changes, schedulers, util

try:
    import settings
except Exception as e:
    print("ERROR: local settings.py not found", file=sys.stderr)
    print(e)
    raise

# PERFORMANCE TESTS

from dbt2 import DBT2STEPS
from dbt3 import DBT3STEPS
from dbt5 import DBT5STEPS
from dbt7 import DBT7STEPS

builderNames = list(settings.BUILDERS)

c = BuildmasterConfig = {}

# WORKERS

c['workers'] = settings.WORKERS

c['protocols'] = {'pb': {'port': 9989}}

# CHANGESOURCES

c['change_source'] = []
c['change_source'].append(
        changes.GitPoller(
            'https://github.com/postgres/postgres.git',
            workdir='gitpoller-postgres',
            branches=True,
            pollInterval=300,
            pollAtLaunch=True,
            )
        )

# SCHEDULERS

c['schedulers'] = []
c['schedulers'].append(
        schedulers.AnyBranchScheduler(
            name="all",
            treeStableTimer=1,
            builderNames=builderNames,
            )
        )
c['schedulers'].append(
        schedulers.ForceScheduler(
            name="force",
            builderNames=builderNames,
            )

# BUILDERS

factory = {
        'dbt2': util.BuildFactory(),
        'dbt3': util.BuildFactory(),
        'dbt5': util.BuildFactory(),
        'dbt7': util.BuildFactory(),
        }

for step in DBT2STEPS:
    factory['dbt2'].addStep(step)

for step in DBT3STEPS:
    factory['dbt3'].addStep(step)

for step in DBT5STEPS:
    factory['dbt5'].addStep(step)

for step in DBT7STEPS:
    factory['dbt7'].addStep(step)

c['builders'] = []

for test, workernames in settings.BUILDERS.items():
    c['builders'].append(
        util.BuilderConfig(
            name=test,
            workernames=workernames,
            factory=factory[test],
        )
    )

# BUILDBOT SERVICES

c['services'] = []

# PROJECT IDENTITY

c['title'] = "PostgreSQL Perf"
c['titleURL'] = "https://github.com/PGPerfFarm/pgperffarm-buildbot"

c['buildbotURL'] = settings.BUILDBOT_URL

c['www'] = {
        "port": settings.WWW_PORT,
        "auth": util.UserPasswordAuth(settings.ADMINS),
        "authz": util.Authz(
            allowRules=[
                util.AnyControlEndpointMatcher(role="admins"),
                ],
            roleMatchers=[
                util.RolesFromEmails(admins=list(settings.ADMINS)),
                ],
            ),
        "plugins": {"waterfall_view": {}, "console_view": {}, "grid_view": {}},
        }

# DB URL

c['db'] = {
    'db_url': settings.DB_URL,
}
